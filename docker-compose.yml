version: '2'
services:
  lb:
    restart: always
    image: 'dockercloud/haproxy:latest'
    ports:
      # Web UIs
      - '80:80'

      # Carbon
      - '2003:2003'
      - '2004:2004'
      - '7002:7002'

      # Logstash
      - '5044:5044'

      # Elasticsearch
      - '9200:9200'
      - '9300:9300'

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - frontend
      - api
      - adminer
      - carbon
      - graphite
      - grafana
      - kibana

  adminer:
    restart: always
    image: clue/adminer
    links:
      - db
    environment:
      VIRTUAL_HOST: http://adminer.manager.loc

  grafana:
    restart: always
    image: grafana/grafana
    links:
      - graphite
    environment:
      VIRTUAL_HOST: http://grafana.manager.loc
    volumes:
      - grafana:/var/lib/grafana

  carbon:
    restart: always
    build: docker/carbon
    volumes:
      - whisper:/opt/graphite/storage/whisper/:rw
    environment:
      TCP_PORTS: "2003, 2004, 7002"

  graphite:
    restart: always
    build: docker/graphite
    volumes:
      - whisper:/opt/graphite/storage/whisper/:rw
    links:
      - carbon
    environment:
      VIRTUAL_HOST: http://graphite.manager.loc

  db:
    restart: always
    image: mysql:5.7
    volumes:
      - mysql:/var/lib/mysql
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: db
        MYSQL_USER: user
        MYSQL_PASSWORD: pass

  #FRONTEND ANGULAR START
  frontend:
    restart: always
    image: php:7-apache
    volumes:
      - ./files/frontend/webroot:/var/www/html/
      - ./files/frontend/node_modules:/var/www/html/node_modules
    links:
      - api
      - frontend_tsc
    environment:
      VIRTUAL_HOST: http://manager.loc
      API_URL: http://api.manager.loc/app_dev.php

  frontend_npm:
    image: treyjones/npm:latest
    volumes:
      - ./files/frontend:/npm

  frontend_tsc:
    image: milanaleksic/typescript
    volumes:
      - ./files/frontend/:/home/developer/workspace
    command: tsc -p tsconfig.json
    links:
      - frontend_npm
  #/FRONTEND ANGULAR START

  api:
    restart: always
    image: formalibre/manager-api
    volumes:
      - ./files/api/:/var/www/html/:rw
      - api_logs:/var/www/html/var/logs/:rw
      - api_cache:/var/www/html/var/cache/:rw
      - api_sessions:/var/www/html/var/sessions/:rw
    links:
      - backend
    environment:
      VIRTUAL_HOST: http://api.manager.loc

  # Symfony backend
  backend:
    restart: always
    image: formalibre/manager-backend
    volumes:
      - ./files/backend/:/var/www/html/:rw
      - backend_logs:/var/www/html/var/logs/:rw
      - backend_cache:/var/www/html/var/cache/:rw
      - backend_sessions:/var/www/html/var/sessions/:rw
    links:
      - db
    ports:
      - 88:80 # This should not be exposed in production
    environment:
        SYMFONY__DATABASE_NAME: db
        SYMFONY__DATABASE_USER: user
        SYMFONY__DATABASE_PASSWORD: pass

### Configuration
  config_npm:
    image: treyjones/npm:latest
    volumes:
      - ./config/wesh:/npm
    command: npm install

  config_tsc:
    image: milanaleksic/typescript
    volumes:
      - ./config/wesh/:/home/developer/workspace
    command: tsc -p tsconfig.json
    links:
      - config_npm

  config_nodemon:
    image: tumbumer/alpine-nodemon
    volumes:
      - .:/app
    links:
      - config_tsc
    command: nodemon ./config/wesh/app/main.js -w ./config

#ELK Stack
  # Elasticsearch
  es:
    restart: always
    image: elasticsearch
    command: elasticsearch -Des.network.host=0.0.0.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    expose:
      - "9200"
      - "9300"
    environment:
      TCP_PORTS: "9200, 9300"

  # Kibana
  kibana:
    restart: always
    build: ./docker/kibana
    links:
      - es
    environment:
      # TCP_PORTS: "5601"
      VIRTUAL_HOST: http://kibana.manager.loc
      ELASTICSEARCH_URL: http://es:9200

  logstash:
    restart: always
    build: ./docker/logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./docker/logstash/config:/etc/logstash/conf.d
    links:
      - es
    expose:
      - "5044"
    environment:
      TCP_PORTS: "5044"

volumes:
  mysql:
  api_logs:
  api_cache:
  api_sessions:
  backend_logs:
  backend_cache:
  backend_sessions:
  whisper:
  es_data:
  grafana:
