version: '2'
services:
  lb:
    restart: always
    image: 'dockercloud/haproxy:latest'
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - frontend
      - api
      - adminer

  adminer:
    restart: always
    image: clue/adminer
    links:
      - db
    environment:
      VIRTUAL_HOST: http://adminer.manager.loc

  db:
    image: mysql:5.7
    restart: always
    volumes:
      - mysql:/var/lib/mysql
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: db
        MYSQL_USER: user
        MYSQL_PASSWORD: pass

  # frontend:
  #   restart: always
  #   image: httpd
  #   volumes:
  #     - ./files/frontend/:/usr/local/apache2/htdocs/
  #   links:
  #     - api
  #   environment:
  #     VIRTUAL_HOST: http://manager.loc

  #FRONTEND ANGULAR START
  frontend:
    restart: always
    image: httpd:latest
    volumes:
      - ./files/frontend_angular2/webroot:/usr/local/apache2/htdocs/
      - ./files/frontend_angular2/node_modules:/usr/local/apache2/htdocs/node_modules
    links:
      - api
    environment:
      VIRTUAL_HOST: http://manager.loc

  npm:
    image: treyjones/npm:latest
    volumes:
      - ./files/frontend_angular2:/npm

  tsc:
    image: milanaleksic/typescript
    volumes:
      - ./files/frontend_angular2/:/home/developer/workspace
    command: tsc -p tsconfig.json
  #/FRONTEND ANGULAR START

  api:
    restart: always
    image: formalibre/manager-api
    volumes:
      - ./files/api/:/var/www/html/:rw
      - api_logs:/var/www/html/var/logs/:rw
      - api_cache:/var/www/html/var/cache/:rw
    links:
      - backend
    environment:
      VIRTUAL_HOST: http://api.manager.loc

  # Symfony backend
  backend:
    restart: always
    image: formalibre/manager-backend
    volumes:
      - ./files/backend/:/var/www/html/:rw
      - backend_logs:/var/www/html/var/logs/:rw
      - backend_cache:/var/www/html/var/cache/:rw
    links:
      - db
    ports:
      - 88:80 # This should not be exposed in production
    environment:
        SYMFONY__DATABASE__NAME: db
        SYMFONY__DATABASE__USER: user
        SYMFONY__DATABASE__PASSWORD: pass

  # Node backend
  # backend:
  #   restart: always
  #   image: node:onbuild
  #   volumes:
  #     - ./files/backend_node/:/usr/src/app/:rw
  #   links:
  #     - db
  #   ports:
  #     - 88:80

volumes:
  mysql:
  api_logs:
  api_cache:
  backend_logs:
  backend_cache:
